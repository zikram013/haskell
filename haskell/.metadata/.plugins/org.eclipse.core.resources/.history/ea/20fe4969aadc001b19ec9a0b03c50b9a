
module MasPlegado where
import Data.Char
import Data.List

{-1.Redefinir, usando foldr, la función filter. Por
-- ejemplo, 
--    filter' (<4) [1,7,3,2]  =>  [1,3,2]-}
filterPlegado::(a->Bool)->[a]->[a]
filterPlegado p = foldr (\x y -> if (p x)then(x:y) else y) []

{-2.Definir, usando foldr, la función
--    inversaFR :: [a] -> [a]
-- tal que (inversaFR xs) es la inversa de la lista xs. Por ejemplo,
--    inversaFR [3,5,2,4,7]  =>  [7,4,2,5,3]-}
inversaPlegado::[a]->[a]
inversaPlegado = foldr f [] where f x y = y ++[x]